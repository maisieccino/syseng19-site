<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="http://localhost:4000/2016/group19/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.3.0">Jekyll</generator><link href="http://localhost:4000/2016/group19/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/2016/group19/" rel="alternate" type="text/html" /><updated>2016-12-09T22:42:30+00:00</updated><id>http://localhost:4000/2016/group19//</id><title type="html">Mentor Matching - Team 19</title><subtitle>Matthew Bell, Christopher Lau and Harry Chen are working on creating a system to match mentors and mentees based on their preferences, on behalf of Atos UK.
</subtitle><entry><title type="html">Architecture Research and Algorithm Design</title><link href="http://localhost:4000/2016/group19/development/2016/12/02/architecture-designs.html" rel="alternate" type="text/html" title="Architecture Research and Algorithm Design " /><published>2016-12-02T23:30:51+00:00</published><updated>2016-12-02T23:30:51+00:00</updated><id>http://localhost:4000/2016/group19/development/2016/12/02/architecture-designs</id><content type="html" xml:base="http://localhost:4000/2016/group19/development/2016/12/02/architecture-designs.html">&lt;p&gt;This page details the research we have done through the course of designing the architecture for our system. It also includes details of the design of our matching algorithm.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;MORE&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#important-decision&quot; style=&quot;margin-top: 7px;&quot; class=&quot;btn btn-primary&quot;&gt;Important Decisions&lt;/a&gt;
&lt;a href=&quot;#algorithm-design&quot; style=&quot;margin-top: 7px;&quot; class=&quot;btn btn-primary&quot;&gt;Algorithm Design&lt;/a&gt;&lt;/p&gt;

&lt;h3 class=&quot;section-header&quot; id=&quot;important-decision&quot;&gt;Important Decisions&lt;/h3&gt;
&lt;p&gt;This section highlights the decisions we have made as a team for future development of this project. These decisions include the technology and tools used to build the final system.&lt;/p&gt;

&lt;div class=&quot;table-responsive&quot;&gt;
	&lt;table class=&quot;table table-bordered decisionTable&quot;&gt;
		&lt;tbody&gt;
			&lt;col width=&quot;15%&quot; /&gt;
  			&lt;col width=&quot;85%&quot; /&gt;
			&lt;tr&gt;
				&lt;td width=&quot;100px;&quot;&gt;&lt;strong&gt;Decision 1&lt;/strong&gt;&lt;/td&gt;
				&lt;td&gt;Which web application framework do we use for the &lt;strong&gt;front-end?&lt;/strong&gt;&lt;/td&gt;
			&lt;/tr&gt;
			&lt;tr&gt;
				&lt;td rowspan=&quot;3&quot;&gt;&lt;strong&gt;Option Considered&lt;/strong&gt;&lt;/td&gt;
				&lt;td&gt;Angular JS and Ionic&lt;/td&gt;
			&lt;/tr&gt;	
			&lt;tr&gt;&lt;td&gt;React JS&lt;/td&gt;&lt;/tr&gt;
			&lt;tr&gt;&lt;td&gt;Ember JS&lt;/td&gt;&lt;/tr&gt;
			&lt;tr&gt;
				&lt;td&gt;&lt;strong&gt;Final Decision&lt;/strong&gt;&lt;/td&gt;
				&lt;td&gt;Angular JS and Ionic&lt;/td&gt;
			&lt;/tr&gt;
			&lt;tr&gt;
				&lt;td&gt;&lt;strong&gt;Justifications&lt;/strong&gt;&lt;/td&gt;
				&lt;td&gt;
					&lt;strong&gt;Why not React JS?&lt;/strong&gt;
					&lt;p&gt;We considered React JS due to its ability to build components and functionality which are well maintained. React is also able to render on server side which makes integration with backend easier. However, React is not a full framework as there are no router nor model management libraries built into ReactJS. Hence writing components is not as easy.&lt;/p&gt;
					&lt;strong&gt;Why not Ember JS&lt;/strong&gt;
					&lt;p&gt;We chose Ember JS as it is a flexible framework which speeds up the performance of our application without reloading the whole page. Ember is also good for REST API querying which is what we plan to use for communication with database. However, we have to write our own ajax requests since a lot of ember addons are ports of existing jQuery libraries and very few are written from scartch.&lt;/p&gt;
					&lt;strong&gt;Why Angular JS and Ionic&lt;/strong&gt;
					&lt;p&gt;The main advantages of Angular is the flexibility and support by the community. Angular JS is supported by Google and has a great development community. It also operates directly on DOM rather than inner HTML more efficiently. Our Client also heavily emphasised that the application should be available on mobile. Ionic is able to produce applications that can run on both IOS and Android environment. It also makes developing with Angular easier because modules from Angular ca be used.&lt;/p&gt;
				&lt;/td&gt;
			&lt;/tr&gt;
		&lt;/tbody&gt;
	&lt;/table&gt;
&lt;/div&gt;

&lt;div class=&quot;table-responsive&quot;&gt;
	&lt;table class=&quot;table table-bordered decisionTable&quot;&gt;
		&lt;tbody&gt;
			&lt;col width=&quot;15%&quot; /&gt;
  			&lt;col width=&quot;85%&quot; /&gt;
			&lt;tr&gt;
				&lt;td width=&quot;100px;&quot;&gt;&lt;strong&gt;Decision 2&lt;/strong&gt;&lt;/td&gt;
				&lt;td&gt;Which web application framework do we use for the &lt;strong&gt;back-end?&lt;/strong&gt;&lt;/td&gt;
			&lt;/tr&gt;
			&lt;tr&gt;
				&lt;td rowspan=&quot;4&quot;&gt;&lt;strong&gt;Option Considered&lt;/strong&gt;&lt;/td&gt;
				&lt;td&gt;Django&lt;/td&gt;	
			&lt;/tr&gt;
			&lt;tr&gt;&lt;td&gt;Ruby On Rails&lt;/td&gt;&lt;/tr&gt;
			&lt;tr&gt;&lt;td&gt;Node JS&lt;/td&gt;&lt;/tr&gt;
			&lt;tr&gt;&lt;td&gt;Revel&lt;/td&gt;&lt;/tr&gt;
			&lt;tr&gt;
				&lt;td&gt;&lt;strong&gt;Final Decision&lt;/strong&gt;&lt;/td&gt;
				&lt;td&gt;Django&lt;/td&gt;
			&lt;/tr&gt;
			&lt;tr&gt;
				&lt;td&gt;&lt;strong&gt;Justifications&lt;/strong&gt;&lt;/td&gt;
				&lt;td&gt;
					&lt;strong&gt;Why not Ruby on Rails?&lt;/strong&gt;
					&lt;p&gt;We considered Ruby on Rails as one of our options due to the expressive nature of the ruby language, allowing funtions to be written very fast. Ruby also had a large developer following and library. However, due to scaffolding could mean that ou application is inflexible and also the dynamic nature of Ruby meant that it runs a little slower compares to statically typed languages.&lt;/p&gt;
					&lt;strong&gt;Why not Revel&lt;/strong&gt;
					&lt;p&gt;Revel was also an option due to its similarity to Ruby on Rails. Revel was written using the Go language which is statically and strongly typed language. Go has strong concurrency and has many multithreading features. However, Revel may not be the most suitable framework due to being too lightweight. This meant that we had to implement a lot features ourselves, making development inefficient.&lt;/p&gt;
					&lt;strong&gt;Deciding between Node JS and Django.&lt;/strong&gt;
					&lt;p&gt;After some discussion the team agreed that Node JS and Django was the most suitable for this application. However, we it was hard to decide between the two frameworks. Node JS is extremely popular over the last cople of years since the community is large and there is easily to find resources Node JS also shares a common language with web page scripts as Node JS programs are written in Javascript. Node applications are also Event-driven which means it can perform other tasks while wating for asynchronous operations.&lt;br /&gt;
					On the other hand, Django is a very high level framework written in python which could lead to rapid development. Django takes care of most aspects of web development such as user authentication and also has an in built admin system. The scalabitlity of Django also makes it very suitable for our application since there are a reasonable amount of users that could potentially use this application.&lt;br /&gt;
					Ultimately, the team decided on Django as the framework for the backend as we felt that Django had many in built systems that could be useful to our application, making development the most efficient.&lt;/p&gt;
				&lt;/td&gt;
			&lt;/tr&gt;
		&lt;/tbody&gt;
	&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;#top&quot; class=&quot;btn btn-primary&quot;&gt;^ Back to top&lt;/a&gt;&lt;/p&gt;

&lt;h3 class=&quot;section-header&quot; id=&quot;algorithm-design&quot;&gt;Algorithm Design&lt;/h3&gt;
&lt;p&gt;&lt;span class=&quot;lead sub-header&quot;&gt;Abstract&lt;/span&gt;&lt;br /&gt;
&lt;strong&gt;Input&lt;/strong&gt;: The algorithm will accept  two lists, Mentors and Mentees, containing users. Users have a name, as well as a list of tags.&lt;br /&gt;
&lt;strong&gt;Final Output&lt;/strong&gt;: A list of matches between mentors and mentees.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;lead sub-header&quot;&gt;Process&lt;/span&gt;&lt;br /&gt;
&lt;strong&gt;Stage 1: Ranking&lt;/strong&gt;&lt;br /&gt;
The algorithm will iterate through each mentee in turn: It will look at each mentor, and assign a ‘score’ between the mentee and mentor, which begins at 0. For each matching tag, the score should be increased by 10. Next, it should consider the constraints of the current mentorship programme. For each match in the mentorship programme (e.g., preferences on time served in company), the score should be increased by 5. If the match should absolutely not happen for whatever reason, the score should be set to 0 and the matching algorithm should move onto the next mentor.&lt;/p&gt;

&lt;p&gt;By the end of this process, for each mentee, there should be a list of mentors and their scores. These should be sorted by the highest score first.&lt;/p&gt;

&lt;p&gt;How can we make this faster? Potentially we could cache some of the scores to adapt to similar matches, but for now it’s better to just write a brute force approach and optimise later if need be. To begin with, we should allow users to input tags for themselves. In the future though, we could use semantic analysis to find these tags automatically from their user bio.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Stage 2: Selecting&lt;/strong&gt;&lt;br /&gt;
Each mentee then will be presented with their top three mentors. They will be invited to sort these according to preference (within a time limit), and once these have all been completed, the next stage will begin.&lt;/p&gt;

&lt;p&gt;How will we implement this in reality? Most likely, we’ll use the first three values from each mentee’s matches/scores array and sort them in place to save memory.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Stage 3: Matching&lt;/strong&gt;&lt;br /&gt;
The algorithm will now implement a version of the Gale-Shapley Algorithm to find an optimal set of matches given the mentee’s preferences. The difference here is that there is most likely an uneven amount of mentees to mentors. It’s worth noting at this point that mentors may be after more than one mentee; in this case, the score arrays need to be adjusted so that a mentor with x spaces has x values in the arrays.&lt;/p&gt;

&lt;p&gt;Once this algorithm is run, the matches are then sent to the DB to be saved.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;lead sub-header&quot;&gt;Pseudocode&lt;/span&gt;&lt;br /&gt;
Below is the pseuodocode lllustrating the the 3 stages explained above. A user class is used to store the ID of the mentee or mentor, along with the required tags needed for matching.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/2016/group19/assets/img/pseuodocode.jpg&quot; class=&quot;image&quot; alt=&quot;node.js&quot; height=&quot;80%&quot; width=&quot;95%&quot; /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#top&quot; class=&quot;btn btn-primary&quot;&gt;^ Back to top&lt;/a&gt;&lt;/p&gt;</content><summary type="html">This page details the research we have done through the course of designing the architecture for our system. It also includes details of the design of our matching algorithm.</summary></entry><entry><title type="html">Project Management Tools</title><link href="http://localhost:4000/2016/group19/management/2016/12/02/collborative.html" rel="alternate" type="text/html" title="Project Management Tools" /><published>2016-12-02T23:30:51+00:00</published><updated>2016-12-02T23:30:51+00:00</updated><id>http://localhost:4000/2016/group19/management/2016/12/02/collborative</id><content type="html" xml:base="http://localhost:4000/2016/group19/management/2016/12/02/collborative.html">&lt;p&gt;This page includes all of the tools we have used to manage our project. This includes communication, documentation, prototype design and others.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;MORE&lt;/strong&gt;&lt;/p&gt;

&lt;h3 class=&quot;section-header&quot;&gt;Facebook Messenger&lt;/h3&gt;
&lt;p&gt;During our first meeting we set up a facebook group for communication between each other and share our ideas.&lt;/p&gt;

&lt;h3 class=&quot;section-header&quot;&gt;Trello&lt;/h3&gt;
&lt;p&gt;Trello is a collabration tool that organizes our projects on several boards. In our team we divided boards into three parts: Backlog, In progress and Completed. We create tasks by making boards and then add it into the Backlog section, for every task we assign a due date, members responsible for that task and add labels on it to indicate urgency. Once we start working on a task the card would be moved into the in progress section. The team agreed to take a maximum of 6 tasks in progress every week.&lt;/p&gt;

&lt;h3 class=&quot;section-header&quot;&gt;Github&lt;/h3&gt;
&lt;p&gt;Github is a version-control service based on git. Our team built three github repositories: one for documentation, main code repository, one repository for the project website. Through github each team member could work separately on same project simultaneously by making branches of master branch and send pull requst to merge each one’s work. Also the version control through github could help us to review our work thus find problems in previous work.&lt;/p&gt;

&lt;h3 class=&quot;section-header&quot;&gt;Google Drive and Google Docs&lt;/h3&gt;
&lt;p&gt;All of the documentation we have completed so far (which includes bi-weekly reports, research, design) are shared in google drive before converting it into Latex for submission or adding the content to the project website.&lt;/p&gt;</content><summary type="html">This page includes all of the tools we have used to manage our project. This includes communication, documentation, prototype design and others.</summary></entry><entry><title type="html">Technical Research</title><link href="http://localhost:4000/2016/group19/development/2016/11/04/technical-research.html" rel="alternate" type="text/html" title="Technical Research" /><published>2016-11-04T23:30:51+00:00</published><updated>2016-11-04T23:30:51+00:00</updated><id>http://localhost:4000/2016/group19/development/2016/11/04/technical-research</id><content type="html" xml:base="http://localhost:4000/2016/group19/development/2016/11/04/technical-research.html">&lt;p&gt;This page details all the technical research we have done (excluding architecture) throughout this project, including open-source libraries and frameworks that could be useful for the final system. Our research was split in to 2 categories which was frontend research and backend research.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;MORE&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#back-end&quot; style=&quot;margin-top: 7px;&quot; class=&quot;btn btn-primary&quot;&gt;1. Backend Frameworks/Libraries&lt;/a&gt;
&lt;a href=&quot;#front-end&quot; style=&quot;margin-top: 7px;&quot; class=&quot;btn btn-primary&quot;&gt;2. Frontend Frameworks/Libraries&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;back-end&quot; class=&quot;section-header&quot;&gt;Backend Frameworks/Libraries&lt;/h3&gt;

&lt;!-- Node.js --&gt;
&lt;p&gt;&lt;img src=&quot;/2016/group19/assets/img/node.jpg&quot; class=&quot;image&quot; alt=&quot;node.js&quot; height=&quot;120&quot; width=&quot;120&quot; /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;lead sub-header&quot;&gt;Node.JS&lt;/span&gt;&lt;br /&gt;
Node.JS is an application framework that runs JavaScript code as a native app on computers. It’s gained extreme popularity over the last couple of years and I myself have used it for a few projects in the past. The community is rather large and there’s a library for pretty much anything.&lt;/p&gt;

&lt;p&gt;Node.JS programs are written using JavaScript, a dynamic, untyped language developed originally for scripting web pages in the browser. Recent versions of the language have introduced classes and other useful features, but it’s type inferencing has some weird side effects &lt;code&gt;(try {} == [] and [] == {})&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;lead sub-header&quot;&gt;Advantages&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Large developer community with plenty of libraries.&lt;/li&gt;
  &lt;li&gt;Easy to write and deploy code.&lt;/li&gt;
  &lt;li&gt;Shares a common language with web page scripts.&lt;/li&gt;
  &lt;li&gt;Object variables - JavaScript internally uses hashes/dictionaries/key-value pairs to represent objects, and the value can be of any type… even functions. Makes for very quick development.&lt;/li&gt;
  &lt;li&gt;Event-driven - your Node app can do other things while waiting for asynchronous operations (disk I/O, http requests, etc) which can make up for only having one thread.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;span class=&quot;lead sub-header&quot;&gt;Disadvantages&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Single threaded - no concurrency features.&lt;/li&gt;
  &lt;li&gt;Callbacks - a comment paradigm of JavaScript is using callbacks: functions that accept another function which is called once the original function completes. It can often lead to very messy code, with five or six functions nested inside each other.&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- Ruby on Rails --&gt;
&lt;p&gt;&lt;img src=&quot;/2016/group19/assets/img/ruby.jpg&quot; class=&quot;image&quot; alt=&quot;node.js&quot; height=&quot;120&quot; width=&quot;100&quot; /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;lead sub-header&quot;&gt;Ruby On Rails&lt;/span&gt;&lt;br /&gt;
Ruby on Rails is a web framework that’s written in Ruby, a dynamic programming language. It relies heavily on scaffolding, and the directory/fire structure is rather rigid. However, it means that applications are developed very quickly, and is often used as a prototyping framework.&lt;/p&gt;

&lt;p&gt;The Ruby language is extremely expressive, allowing functions to be written relatively fast without worrying too much about low level features like memory management. Also, like with Node.JS, Ruby has a large developer following and library, using the Rubygems service.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;lead sub-header&quot;&gt;Advantages&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Fast development time thanks to a readable, dynamic language. Ruby trades off some processing overhead in lieu of developer satisfaction.&lt;/li&gt;
  &lt;li&gt;Rails uses scaffold code to generate projects very quickly, and tasks like page routing, templating and database ORM (object relation model, where a row in a database table is represented with a language’s class) are built in.&lt;/li&gt;
  &lt;li&gt;Ruby contains symbols that can be used instead of strings for hash keys. For instance, &lt;code&gt;:id&lt;/code&gt; could represent the id of a user.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;span class=&quot;lead sub-header&quot;&gt;Disadvantages&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Scaffolding can mean that the project structure is inflexible, and code should be distributed between files as the Rails developers intended.&lt;/li&gt;
  &lt;li&gt;Ruby’s dynamic nature can mean that it runs a little slower than compiled/statically typed languages, as there’s overhead resulting from Ruby’s type inference engine.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/2016/group19/assets/img/django.jpg&quot; class=&quot;image&quot; alt=&quot;node.js&quot; height=&quot;75&quot; width=&quot;200&quot; /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;lead sub-header&quot;&gt;Django&lt;/span&gt;&lt;br /&gt;
Django is a high level web framework that is written in python  that encourages rapid development. Django is also free and open source and is built by experienced developers which takes care of much hassle of certain parts of web development. One of the main advantages of Django is that it is really fast and is designed to help developers take applications from concept to completion very quickly.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;lead sub-header&quot;&gt;Advantages&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Very fast - Most of the aspects of web development are taken care of by the framework itself such as user authentication and form handling. It also has an inbuilt User Model implementation.&lt;/li&gt;
  &lt;li&gt;Security - Django’s inbuilt user authentication system are reassuringly secure which helps developers avoid security mistakes.&lt;/li&gt;
  &lt;li&gt;Scalability - Despite many in built system takes makes development really fast, Django is exceedingly scalable and flexible.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;span class=&quot;lead sub-header&quot;&gt;Disadvantages&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Maintainability - Since Django runs on python, it needs to maintain backwards compatibility when there are newer versions of python which makes it evolve slowly.&lt;/li&gt;
  &lt;li&gt;Templating - Most inbuilt features in Django require the use of templates, which can be rigid to the developer when trying to implement something different.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/2016/group19/assets/img/revel.jpg&quot; class=&quot;image&quot; alt=&quot;node.js&quot; height=&quot;60&quot; width=&quot;140&quot; /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;lead sub-header&quot;&gt;Revel&lt;/span&gt;&lt;br /&gt;
Revel is a web framework written using the Go language, a statically and strongly typed language. Go’s main benefits are its strong concurrency and networking features, and is high level enough to hide things like memory management.&lt;/p&gt;

&lt;p&gt;The Revel framework is similar to Ruby on Rails in that it employs the MVC (model, view, controller) design pattern to structure the project. It can be used for serving HTML from templates, or it can be also used for serving a RESTful JSON API.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;lead sub-header&quot;&gt;Advantages&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Statically and strongly typed - the Go language may not have the syntactic sugar of Ruby or Python, but it’s built to run fast.&lt;/li&gt;
  &lt;li&gt;Multithreading - Go uses channels to handle concurrent features, which can be used to create more optimised servers, if needed.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;span class=&quot;lead sub-header&quot;&gt;Disadvantages&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Barebones - as Revel is very lightweight, it also means that the developer needs to implement a lot of features themselves, increasing development time.&lt;/li&gt;
  &lt;li&gt;Revel uses scaffolding to generate the project files, which may mean that the project structure is rigid.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;#top&quot; class=&quot;btn btn-primary&quot;&gt;^ Back to top&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;front-end&quot; class=&quot;section-header&quot;&gt;Frontend Frameworks/Libraries&lt;/h3&gt;

&lt;!-- Angular --&gt;
&lt;p&gt;&lt;img src=&quot;/2016/group19/assets/img/angularjs.jpg&quot; class=&quot;image&quot; alt=&quot;node.js&quot; height=&quot;120&quot; width=&quot;120&quot; /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;lead sub-header&quot;&gt;AngularJS&lt;/span&gt;&lt;br /&gt;
AngularJS is an open-sourced Javascript framework used for developing single-page web application. It aims to overcome the shortages of HTML for building web application.AngularJS is much closer to model-view-view model pattern. Where model is the data in application, view is what shows to user, view-model provides functions and specific data.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;lead sub-header&quot;&gt;Advantages&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;AngularJS is supported by Google and a great development community.&lt;/li&gt;
  &lt;li&gt;AngularJS operate directly on DOM rather than inner HTML, more efficiently.&lt;/li&gt;
  &lt;li&gt;No need to use observable functions.&lt;/li&gt;
  &lt;li&gt;Extended features such as dependency injection, routing, animations, view orchestration, and more.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;span class=&quot;lead sub-header&quot;&gt;Disadvantages&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Source code too complex.&lt;/li&gt;
  &lt;li&gt;Not easy to learn how to write your own directive.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/2016/group19/assets/img/ionic.jpg&quot; class=&quot;image&quot; alt=&quot;node.js&quot; height=&quot;70&quot; width=&quot;150&quot; /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;lead sub-header&quot;&gt;Ionic&lt;/span&gt;&lt;br /&gt;
Since one of the requirements of our application was being mobile compatible, we decided to look into Ionic Framework as well. Ionic is a HTML5 SDK (software development kit) used to build hybrid mobile app by using Html, Css and Javascript. By using Ionic Creator, we could build a similar user interface interactions like native mobile app. Ionic is based on AngularJS.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;lead sub-header&quot;&gt;Advantages&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Support cordova plugins to enrich functions in our app.&lt;/li&gt;
  &lt;li&gt;Once produce ionic program it could be run on both IOS and Android development.&lt;/li&gt;
  &lt;li&gt;Powerful CLI tool: Control and manage you project easier.&lt;/li&gt;
  &lt;li&gt;Providing beautiful  UI components.&lt;/li&gt;
  &lt;li&gt;Developing using AngularJS, can use all the modules from angular.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;span class=&quot;lead sub-header&quot;&gt;Disadvantages&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Not equal to native app, native device’s API depends on whether Cordova support it.&lt;/li&gt;
  &lt;li&gt;Can not deal with huge amount of images.&lt;/li&gt;
  &lt;li&gt;Some platforms like windows phone are not supported.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/2016/group19/assets/img/bootstrap.jpg&quot; class=&quot;image&quot; alt=&quot;node.js&quot; height=&quot;80&quot; width=&quot;160&quot; /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;lead sub-header&quot;&gt;Bootstrap&lt;/span&gt;&lt;br /&gt;
Bootstrap includes CSS, HTML and JavaScript components. It adheres to responsive web design standards, allowing developers to create responsive sites of all complexities and sizes.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;lead sub-header&quot;&gt;Advantages&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Responsive web design support (can also be disabled if required)&lt;/li&gt;
  &lt;li&gt;Excellent documentation available online&lt;/li&gt;
  &lt;li&gt;Updated continously, hence it includes the latest and best features. It is also upgraded to use Sass as a CSS processor.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;span class=&quot;lead sub-header&quot;&gt;Disadvantages&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Out-of-the-box file size of 276kB due to excessive number of rarely used styles&lt;/li&gt;
  &lt;li&gt;Excessive number of HTML classes and DOM elements can be messy and confusing&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/2016/group19/assets/img/reactjs.jpg&quot; class=&quot;image&quot; alt=&quot;node.js&quot; height=&quot;70&quot; width=&quot;170&quot; /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;lead sub-header&quot;&gt;React&lt;/span&gt;&lt;br /&gt;
React.js is a JavaScript library for building user interfaces, built by top engineers at Facebook. React is all about reusable components. However, unlike frameworks, which are built with the goal of getting whole apps up and running quickly, the only thing you do with React is build components. As React.js’s core functionality, components make reusing code, testing, and separating concerns easy.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;lead sub-header&quot;&gt;Advantages&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Easy to know how a component is rendered, you just look at the render function.&lt;/li&gt;
  &lt;li&gt;React is able to render on server side.&lt;/li&gt;
  &lt;li&gt;React ensures readability and makes maintainability easier.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;span class=&quot;lead sub-header&quot;&gt;Disadvantages&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;It’s not a full framework. There’s no router nor model management libraries built into reactJS – unlike angular or ember. Hence one needs to have some degree of experience in picking libraries to fulfill these needs.&lt;/li&gt;
  &lt;li&gt;React is rather verbose. Writing components isn’t as straight forward as pure HTML &amp;amp; JS&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/2016/group19/assets/img/emberjs.jpg&quot; class=&quot;image&quot; alt=&quot;node.js&quot; height=&quot;80&quot; width=&quot;160&quot; /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;lead sub-header&quot;&gt;Ember.Js&lt;/span&gt;&lt;br /&gt;
Ember.js is an open source JavaScript client-side framework for developing the web applications and uses the MVC(Model-View-Controller) architecture pattern. Ember.js is mainly used to creating reusable and maintainable JavaScript web applications.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;lead sub-header&quot;&gt;Advantages&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Ember.js is an open source JavaScript framework under (MIT license).&lt;/li&gt;
  &lt;li&gt;It is a flexible framework that embraces the concept of fast web page. It allows to speed up the performance of your application without reloading the whole page.&lt;/li&gt;
  &lt;li&gt;It has the handlebars templating library which is similar as HTML and also embed an expressions that changes the display.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;span class=&quot;lead sub-header&quot;&gt;Disadvantages&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Very dependant on jQuery libraries. Very few libraries are written from scratch.&lt;/li&gt;
  &lt;li&gt;Less space for customization of everything.&lt;/li&gt;
  &lt;li&gt;No server-side rendering.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;#top&quot; class=&quot;btn btn-primary&quot;&gt;^ Back to top&lt;/a&gt;&lt;/p&gt;</content><summary type="html">This page details all the technical research we have done (excluding architecture) throughout this project, including open-source libraries and frameworks that could be useful for the final system. Our research was split in to 2 categories which was frontend research and backend research.</summary></entry><entry><title type="html">Background Research</title><link href="http://localhost:4000/2016/group19/development/2016/11/04/background-research.html" rel="alternate" type="text/html" title="Background Research" /><published>2016-11-04T23:30:51+00:00</published><updated>2016-11-04T23:30:51+00:00</updated><id>http://localhost:4000/2016/group19/development/2016/11/04/background-research</id><content type="html" xml:base="http://localhost:4000/2016/group19/development/2016/11/04/background-research.html">&lt;h3 class=&quot;section-header&quot;&gt;Overcoming the Stable Marriage Problem&lt;/h3&gt;
&lt;p&gt;After researching online regarding solutions to the Stable Marriage Problem, we found that applying the &lt;strong&gt;Gale-Shapley Algorithm&lt;/strong&gt; would be an effective way to find a stable match between mentors and mentees.&lt;/p&gt;

&lt;p&gt;The Gale-Shapley Algorithm involves a number of iterations or “rounds” where mentees are able to choose a fixed number of prefered mentors ordered by rank. Then the system will match mentors and mentees based on how suitable the match is between a mentor and mentee. By using this algortihm, we can ensure that every mentees gets matched with a mentor and no one is unpaired. A more detailed design of thhe matching process is available at the Architecture Research and Design section.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;MORE&lt;/strong&gt;&lt;/p&gt;

&lt;h3 class=&quot;section-header&quot;&gt;Existing Solutions&lt;/h3&gt;
&lt;p&gt;We searched for some existing applications that does matching between individuals as part of the initial stages of research. This helped us gain a basic idea of some features that we may like to include in our final product.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;lead sub-header&quot;&gt;Mentor Match&lt;/span&gt;&lt;br /&gt;
&lt;a href=&quot;https://www.mentormatch.org.uk/&quot;&gt;&lt;strong&gt;Mentor Match&lt;/strong&gt;&lt;/a&gt; is an existing open source website that had a very similar concept to what our client was trying to acheive. Mentor Match is open to everyone and allows individuals with experience in a particular skillset to act as mentors to help mentees improve on that particular skillset.
Since this website is open to everyone, it makes exchange of knowledge very simple as anyone could take part in it.&lt;/p&gt;

&lt;p&gt;However, there are certain features that the website lacks in terms of security as there is no verification as there is no way to assure that users applying to be a mentor has the skillset to become one. Also there were different types of mentor schemes requested by our client which differ with the schemes provided on the Mentor Match website. Despite the differences in structure of this website with the web application we are about to build, Mentor Match could be a useful guideline on the basic foundation of our web application.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;lead sub-header&quot;&gt;Business Mentoring&lt;/span&gt;&lt;br /&gt;
&lt;a href=&quot;http://www.management-mentors.com/products/corporate-mentoring-products-overview&quot;&gt;&lt;strong&gt;Business Mentoring&lt;/strong&gt;&lt;/a&gt; matches based on:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Focus areas/ competencies: There system have 25 default competencies to choose. (useful)&lt;/li&gt;
  &lt;li&gt;Forced choice questions:Provide questions that have several answers to select. Make the preferences of matching more specific. (useful)&lt;/li&gt;
  &lt;li&gt;Personality test:(optional)&lt;/li&gt;
  &lt;li&gt;Ranking of key roles: In this section, mentorees must decide what type of mentor they want based on how they order the following roles: teacher, sponsor, cheerleader, counselor, and friend (meaning if they put “cheerleader” first and “counselor” last, it’s more important that the mentor is a cheerleader than a friend). Mentors must decide the type of mentor they want to be and do the same thing, ranking the roles in order of most important to least. (useful)&lt;/li&gt;
  &lt;li&gt;Essay section (not useful)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;They also provide system matching:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Auto matching: makes matches based on algorithm without any review.&lt;/li&gt;
  &lt;li&gt;three-steps-matching (also combines human touch, not 100% system matching):
    &lt;ul&gt;
      &lt;li&gt;Program manager choose 3 tentative mentors for individual mentee.&lt;/li&gt;
      &lt;li&gt;Comparing mentoring forms(inforamtion) of the mentee with each mentor&lt;/li&gt;
      &lt;li&gt;The program manager makes the final choice&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;What we could learn from this project:
As the result of precise matching algorithm,this application has high percentage of successful matching (90% according to its website). From my research, the division of focus areas and ranking of key roles play an important role in matching, thats what we could follow in our app, give a list of skills as tags for user to choose.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;lead sub-header&quot;&gt;Dating Applications&lt;/span&gt;&lt;br /&gt;
Dating applications may not be the most professional apps to be used in a workplace, however the concept of these types of application is very similar to what was requested by our client. Our Client even quoted that this application “could be considered a kind of dating app”. Most dating applications have simple and elegent user interfaces that users can act easily with. This could be applied to our application so that employees in Atos workplace can use our application with ease. Concepts such as user profiles, notifications, instant messaging could be included in our application which already exist in dating applications.&lt;/p&gt;</content><summary type="html">Overcoming the Stable Marriage Problem
After researching online regarding solutions to the Stable Marriage Problem, we found that applying the Gale-Shapley Algorithm would be an effective way to find a stable match between mentors and mentees.

The Gale-Shapley Algorithm involves a number of iterations or “rounds” where mentees are able to choose a fixed number of prefered mentors ordered by rank. Then the system will match mentors and mentees based on how suitable the match is between a mentor and mentee. By using this algortihm, we can ensure that every mentees gets matched with a mentor and no one is unpaired. A more detailed design of thhe matching process is available at the Architecture Research and Design section.</summary></entry><entry><title type="html">MosCoW Requirements</title><link href="http://localhost:4000/2016/group19/requirements/2016/11/04/moscow-requirements.html" rel="alternate" type="text/html" title="MosCoW Requirements" /><published>2016-11-04T23:30:51+00:00</published><updated>2016-11-04T23:30:51+00:00</updated><id>http://localhost:4000/2016/group19/requirements/2016/11/04/moscow-requirements</id><content type="html" xml:base="http://localhost:4000/2016/group19/requirements/2016/11/04/moscow-requirements.html">&lt;p&gt;This is a list of all the requirements as agreed and finalised with our client. These requirements are subject to change over the course of the development phase of this project.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;MORE&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;table-responsive&quot;&gt;
	&lt;table class=&quot;table table-bordered&quot;&gt;
		&lt;thead&gt;
	      	&lt;tr&gt;
	        	&lt;th&gt;Requirement&lt;/th&gt;
	        	&lt;th&gt;Description&lt;/th&gt;
	        	&lt;th&gt;Category&lt;/th&gt;
	      	&lt;/tr&gt;
    	&lt;/thead&gt;
    	&lt;tbody&gt;
    		&lt;!-- Must Haves --&gt;
    		&lt;tr class=&quot;category-header&quot;&gt;&lt;td colspan=&quot;3&quot;&gt;Must Have&lt;/td&gt;&lt;/tr&gt;
		    &lt;tr&gt;
		       	&lt;td&gt;Matching system&lt;/td&gt;
		        &lt;td&gt;There must be a matching algorithm that matches mentors and mentees as best as possible according to their preferences.&lt;/td&gt;
		        &lt;td&gt;Functional&lt;/td&gt;
		    &lt;/tr&gt;
		    &lt;tr&gt;
		       	&lt;td&gt;Preferences for matching&lt;/td&gt;
		        &lt;td&gt;There must be a system for mentors and mentees to specify their preferences for matching, for instance interests.&lt;/td&gt;
		        &lt;td&gt;Functional&lt;/td&gt;
		    &lt;/tr&gt;
		    &lt;tr&gt;
		        &lt;td&gt;Separate mentorship programmes&lt;/td&gt;
		        &lt;td&gt;The system must allow for a number of separate mentorship programmes with their own matching constraints.&lt;/td&gt;
		        &lt;td&gt;Non-Functional&lt;/td&gt;
		    &lt;/tr&gt;
		    &lt;tr&gt;
		        &lt;td&gt;Personal status&lt;/td&gt;
		        &lt;td&gt;Users must be able to see the status of their mentorships, for instance whether they can match with users and how active the mentorship is.&lt;/td&gt;
		        &lt;td&gt;Functional&lt;/td&gt;
		    &lt;/tr&gt;
		    &lt;tr&gt;
		        &lt;td&gt;Web Application&lt;/td&gt;
		        &lt;td&gt;The application must be able to be accessed on both mobile and desktop form factors&lt;/td&gt;
		        &lt;td&gt;Functional&lt;/td&gt;
		    &lt;/tr&gt;
		    &lt;tr&gt;
		        &lt;td&gt;User Interface and Usability&lt;/td&gt;
		        &lt;td&gt;The application must operate on a user friendly interface which is simple to use&lt;/td&gt;
		        &lt;td&gt;Non-Functional&lt;/td&gt;
		    &lt;/tr&gt;
		    &lt;!-- Should Have --&gt;
		    &lt;tr class=&quot;category-header&quot;&gt;&lt;td colspan=&quot;3&quot;&gt;Should Have&lt;/td&gt;&lt;/tr&gt;
		    &lt;tr&gt;
		       	&lt;td&gt;Profile system&lt;/td&gt;
		        &lt;td&gt;Users should be able to create and manage a simple profile so that other users can learn about them. Should include name, image and perhaps a short bio.&lt;/td&gt;
		        &lt;td&gt;Functional&lt;/td&gt;
		    &lt;/tr&gt;
		    &lt;tr&gt;
		       	&lt;td&gt;Notifications&lt;/td&gt;
		        &lt;td&gt;Users should be able to receive notifications about key features of the app, for instance when matches are allocated. Should also work across different form factors&lt;/td&gt;
		        &lt;td&gt;Functional&lt;/td&gt;
		    &lt;/tr&gt;
		    &lt;tr&gt;
		        &lt;td&gt;Admin bulk operation interface&lt;/td&gt;
		        &lt;td&gt;There should be an interface that allows admins to perform bulk create/read/update/destroy (CRUD) operatons easily.&lt;/td&gt;
		        &lt;td&gt;Functional&lt;/td&gt;
		    &lt;/tr&gt;
		    &lt;!-- Could Have --&gt;
		    &lt;tr class=&quot;category-header&quot;&gt;&lt;td colspan=&quot;3&quot;&gt;Could Have&lt;/td&gt;&lt;/tr&gt;
		    &lt;tr&gt;
		        &lt;td&gt;Mentorship meeting record&lt;/td&gt;
		        &lt;td&gt;The app could be able to store records of the mentor and mentee meeting each other during the course of the mentorship, with the ability to add comments to this.&lt;/td&gt;
		        &lt;td&gt;Functional&lt;/td&gt;
		    &lt;/tr&gt;
		    &lt;tr&gt;
		        &lt;td&gt;Instant messaging&lt;/td&gt;
		        &lt;td&gt;The app could be able to store records of the mentor and mentee meeting each other during the course of the mentorship, with the ability to add comments to this.&lt;/td&gt;
		        &lt;td&gt;Functional&lt;/td&gt;
		    &lt;/tr&gt;
		    &lt;tr&gt;
		        &lt;td&gt;Notifications to meet&lt;/td&gt;
		        &lt;td&gt;The app could facilitate instant messaging betweenmentors and mentees.&lt;/td&gt;
		        &lt;td&gt;Functional&lt;/td&gt;
		    &lt;/tr&gt;
		    &lt;!-- Would Have --&gt;
		    &lt;tr class=&quot;category-header&quot;&gt;&lt;td colspan=&quot;3&quot;&gt;Would Have&lt;/td&gt;&lt;/tr&gt;
		     &lt;tr&gt;
		        &lt;td&gt;Corporate Directory Lookup&lt;/td&gt;
		        &lt;td&gt;The app would be able to use the company’s internal “Corporate Directory” to populate users’ profiles&lt;/td&gt;
		        &lt;td&gt;Functional&lt;/td&gt;
		    &lt;/tr&gt;
		&lt;/tbody&gt;
	&lt;/table&gt;
&lt;/div&gt;</content><summary type="html">This is a list of all the requirements as agreed and finalised with our client. These requirements are subject to change over the course of the development phase of this project.</summary></entry><entry><title type="html">Client Meeting 2 Notes</title><link href="http://localhost:4000/2016/group19/meetings/2016/10/26/client-meeting.html" rel="alternate" type="text/html" title="Client Meeting 2 Notes" /><published>2016-10-26T14:00:00+01:00</published><updated>2016-10-26T14:00:00+01:00</updated><id>http://localhost:4000/2016/group19/meetings/2016/10/26/client-meeting</id><content type="html" xml:base="http://localhost:4000/2016/group19/meetings/2016/10/26/client-meeting.html">&lt;p&gt;Thiss was a quick Skype call to finalize requirements. The discussion was more focussed on the process of matching mentors with mentees and also the criteria that current mentees use when finding mentors. Finally, cleared some outstanding confusion regarding the general structure of the app (eg. the different constraints that different mentorship programs may have).&lt;/p&gt;</content><summary type="html">Thiss was a quick Skype call to finalize requirements. The discussion was more focussed on the process of matching mentors with mentees and also the criteria that current mentees use when finding mentors. Finally, cleared some outstanding confusion regarding the general structure of the app (eg. the different constraints that different mentorship programs may have).</summary></entry><entry><title type="html">Supervisor Meeting 1 Notes</title><link href="http://localhost:4000/2016/group19/meetings/2016/10/24/supervisor-meeting.html" rel="alternate" type="text/html" title="Supervisor Meeting 1 Notes" /><published>2016-10-24T14:00:00+01:00</published><updated>2016-10-24T14:00:00+01:00</updated><id>http://localhost:4000/2016/group19/meetings/2016/10/24/supervisor-meeting</id><content type="html" xml:base="http://localhost:4000/2016/group19/meetings/2016/10/24/supervisor-meeting.html">&lt;p&gt;Next fortnightly meeting, Monday 14th Nov 2pm&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Chase up with Jane, intro supervisor&lt;/li&gt;
  &lt;li&gt;Get existing forms + docs
    &lt;ul&gt;
      &lt;li&gt;CONFIRM requirements/what is a success&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Formal outline
    &lt;ul&gt;
      &lt;li&gt;Explain project&lt;/li&gt;
      &lt;li&gt;~3 paragraphs&lt;/li&gt;
      &lt;li&gt;No ‘filler’ or junk text&lt;/li&gt;
      &lt;li&gt;Clear aims/objectives&lt;/li&gt;
      &lt;li&gt;~3/4 page&lt;/li&gt;
      &lt;li&gt;3 main objectives + 1 stretch objective&lt;/li&gt;
      &lt;li&gt;Link these to deliverables&lt;/li&gt;
      &lt;li&gt;Agreed with client + supervisor&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><summary type="html">Next fortnightly meeting, Monday 14th Nov 2pm

  Chase up with Jane, intro supervisor
  Get existing forms + docs
    
      CONFIRM requirements/what is a success
    
  
  Formal outline
    
      Explain project
      ~3 paragraphs
      No ‘filler’ or junk text
      Clear aims/objectives
      ~3/4 page
      3 main objectives + 1 stretch objective
      Link these to deliverables
      Agreed with client + supervisor</summary></entry><entry><title type="html">Project Background and Initial Considerations</title><link href="http://localhost:4000/2016/group19/background/2016/10/18/background.html" rel="alternate" type="text/html" title="Project Background and Initial Considerations" /><published>2016-10-18T00:30:51+01:00</published><updated>2016-10-18T00:30:51+01:00</updated><id>http://localhost:4000/2016/group19/background/2016/10/18/background</id><content type="html" xml:base="http://localhost:4000/2016/group19/background/2016/10/18/background.html">&lt;h3 class=&quot;section-header&quot;&gt;Our Client&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Atos&lt;/strong&gt; is a leader in digital services. Serving a global client base, Atos provides Consulting &amp;amp; Systems Integration services, Managed Services &amp;amp; BPO, Cloud operations, Big Data &amp;amp; Cyber-security solutions, as well as transactional services through Worldline, the European leader in the payments and transactional services industry.&lt;/p&gt;

&lt;p&gt;Atos are also focused on business technology that powers progress and helps organizations to create their firm of the future. The client we are working with is based at the Nottingham Office.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;MORE&lt;/strong&gt;&lt;/p&gt;

&lt;h3 class=&quot;section-header&quot;&gt;Problem Definition&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Atos is a large firm consisting of multiple employees of different skillset and age group working in various departments.&lt;/li&gt;
  &lt;li&gt;Our client wanted a way that would allow employees in their workplace to help improve each other’s skillset.&lt;/li&gt;
  &lt;li&gt;Our cliet proposed an application that would pair up mentors who are experienced employees with newer employees which acts as their mentees.&lt;/li&gt;
  &lt;li&gt;The client also addressed the stable marriage problem which is the problem of finding stable matching between the sample size of mentors and mentees.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 class=&quot;section-header&quot;&gt;Stable Marriage Problem&lt;/h3&gt;
&lt;p&gt;The stable marriage problem marriage problem is the problem of finding a stable matching between two equally sized sets of elements given an ordering of preferences for each element. This problem can be modeled by using the employees as an example where there are equal number of employees willing to act as mentors and similarly apply to become a mentee.&lt;/p&gt;

&lt;p&gt;Currently the process of matching a mentor and mentee is done manually by human resources in Atos. Our client wanted an application that does this automatically and is also able to handle non-perfect data size such as when the number of mentors and mentees differ.&lt;/p&gt;

&lt;h3 class=&quot;section-header&quot;&gt;Project brief&lt;/h3&gt;
&lt;p&gt;The brief for our project is to create a system that matches mentors and mentees on behalf of Atos. The system will allow employees to sign up to various company programmes as either a mentor or a mentee, and then once applications are closed the system will use the users’ profiles (as well as any constraints the program has) to find the most suitable mentor-mentee matchings.&lt;/p&gt;

&lt;p&gt;The brief was deliberately left as open-ended as possible, to allow us to focus on completing the problem rather than working with an unfamiliar technology stack.&lt;/p&gt;

&lt;h3 class=&quot;section-header&quot;&gt;User Interface Considerations&lt;/h3&gt;
&lt;p&gt;When meeting our client for the first time, she was favourable of the system being accessible from both her smartphone and laptop/desktop PC. So naturally we decided that a web app would be the best fit for this project. Whether this was to use Angular, Ionic, Meteor or some other framework had not been decided at this point.&lt;/p&gt;

&lt;p&gt;Other things to consider included the possibility of receiving notifications, either in the form of push notifications from the app itself, SMS messages sent to a mobile phone, or emails.&lt;/p&gt;</content><summary type="html">Our Client
Atos is a leader in digital services. Serving a global client base, Atos provides Consulting &amp;amp; Systems Integration services, Managed Services &amp;amp; BPO, Cloud operations, Big Data &amp;amp; Cyber-security solutions, as well as transactional services through Worldline, the European leader in the payments and transactional services industry.

Atos are also focused on business technology that powers progress and helps organizations to create their firm of the future. The client we are working with is based at the Nottingham Office.</summary></entry><entry><title type="html">CTO Meeting 1 Notes</title><link href="http://localhost:4000/2016/group19/meetings/2016/10/10/cto-meeting.html" rel="alternate" type="text/html" title="CTO Meeting 1 Notes" /><published>2016-10-10T14:00:00+01:00</published><updated>2016-10-10T14:00:00+01:00</updated><id>http://localhost:4000/2016/group19/meetings/2016/10/10/cto-meeting</id><content type="html" xml:base="http://localhost:4000/2016/group19/meetings/2016/10/10/cto-meeting.html">&lt;p&gt;This meeting involved us talking to Mike Smith, CTO of Atos, about the technical constraints of the project.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Use what we’re most familiar with&lt;/li&gt;
  &lt;li&gt;looking for &lt;em&gt;ideas&lt;/em&gt; not the final system necessarily (although it’s a challenge!)&lt;/li&gt;
  &lt;li&gt;they’re not able to provide infrastructure&lt;/li&gt;
  &lt;li&gt;ask department for a VPS (done!)&lt;/li&gt;
  &lt;li&gt;may be a different no of pairs (i.e. more mentees than mentors)&lt;/li&gt;
  &lt;li&gt;may be times when a mentee has no mentor and has to miss out&lt;/li&gt;
  &lt;li&gt;natural language processing would be pretty cool&lt;/li&gt;
  &lt;li&gt;unlikely to use corporate DB - privacy reasons etc&lt;/li&gt;
  &lt;li&gt;list things that might be important&lt;/li&gt;
  &lt;li&gt;work out primary considerations (for matching)&lt;/li&gt;
  &lt;li&gt;score matches? (i.e. out of 100)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;user-story&quot;&gt;User story&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;individual registers on system&lt;/li&gt;
  &lt;li&gt;registers for mentor position or mentee position&lt;/li&gt;
  &lt;li&gt;add details&lt;/li&gt;
  &lt;li&gt;processing step&lt;/li&gt;
  &lt;li&gt;then.. shortlist?&lt;/li&gt;
  &lt;li&gt;recommendation?&lt;/li&gt;
  &lt;li&gt;preferences?&lt;/li&gt;
  &lt;li&gt;match made?&lt;/li&gt;
  &lt;li&gt;where does the final decision rest?&lt;/li&gt;
  &lt;li&gt;will there be a “cooling-off” period where mentees can change their minds?&lt;/li&gt;
  &lt;li&gt;“think about design”&lt;/li&gt;
  &lt;li&gt;relationship object separate from user object&lt;/li&gt;
  &lt;li&gt;“status” object&lt;/li&gt;
  &lt;li&gt;admin view “very useful”&lt;/li&gt;
  &lt;li&gt;how will we report status? rating out of 5stars? text?&lt;/li&gt;
  &lt;li&gt;authentication:
    &lt;ul&gt;
      &lt;li&gt;Atos have their own SSO&lt;/li&gt;
      &lt;li&gt;Don’t waste time writing our own&lt;/li&gt;
      &lt;li&gt;Use Twitter/Facebook login, or OAuth&lt;/li&gt;
      &lt;li&gt;Modular is good so that it can integrate&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Branding guidelines
    &lt;ul&gt;
      &lt;li&gt;no hard guidelines&lt;/li&gt;
      &lt;li&gt;don’t worry about this too much.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Catch up with Jane…?
    &lt;ul&gt;
      &lt;li&gt;book every 2-4 weeks?&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;No restrictions on code
    &lt;ul&gt;
      &lt;li&gt;we apparently have IP on our work..?&lt;/li&gt;
      &lt;li&gt;Atos has permission to use our work if they like it though.&lt;/li&gt;
      &lt;li&gt;They’re happy for us to make the repo public.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><summary type="html">This meeting involved us talking to Mike Smith, CTO of Atos, about the technical constraints of the project.


  Use what we’re most familiar with
  looking for ideas not the final system necessarily (although it’s a challenge!)
  they’re not able to provide infrastructure
  ask department for a VPS (done!)
  may be a different no of pairs (i.e. more mentees than mentors)
  may be times when a mentee has no mentor and has to miss out
  natural language processing would be pretty cool
  unlikely to use corporate DB - privacy reasons etc
  list things that might be important
  work out primary considerations (for matching)
  score matches? (i.e. out of 100)


User story

  individual registers on system
  registers for mentor position or mentee position
  add details
  processing step
  then.. shortlist?
  recommendation?
  preferences?
  match made?
  where does the final decision rest?
  will there be a “cooling-off” period where mentees can change their minds?
  “think about design”
  relationship object separate from user object
  “status” object
  admin view “very useful”
  how will we report status? rating out of 5stars? text?
  authentication:
    
      Atos have their own SSO
      Don’t waste time writing our own
      Use Twitter/Facebook login, or OAuth
      Modular is good so that it can integrate
    
  
  Branding guidelines
    
      no hard guidelines
      don’t worry about this too much.
    
  
  Catch up with Jane…?
    
      book every 2-4 weeks?
    
  
  No restrictions on code
    
      we apparently have IP on our work..?
      Atos has permission to use our work if they like it though.
      They’re happy for us to make the repo public.</summary></entry><entry><title type="html">Client Meeting 1 Notes</title><link href="http://localhost:4000/2016/group19/meetings/2016/10/10/client-meeting.html" rel="alternate" type="text/html" title="Client Meeting 1 Notes" /><published>2016-10-10T14:00:00+01:00</published><updated>2016-10-10T14:00:00+01:00</updated><id>http://localhost:4000/2016/group19/meetings/2016/10/10/client-meeting</id><content type="html" xml:base="http://localhost:4000/2016/group19/meetings/2016/10/10/client-meeting.html">&lt;p&gt;different groups with different requirements&lt;/p&gt;

&lt;p&gt;3 groups with option to add more - don’t hardcode this&lt;/p&gt;

&lt;p&gt;~60 people in talent program, could be higher for others&lt;/p&gt;

&lt;p&gt;&lt;em&gt;stable marriage problem&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;kinda like a dating site problem&lt;/p&gt;

&lt;p&gt;same people may/may not be available, max. no of mentees per mentor, status of pairing..?&lt;/p&gt;

&lt;p&gt;example: one person has three mentees out their maximum of three. one may be actively meeting, one may not have started meeting, one may have just left scheme&lt;/p&gt;

&lt;p&gt;open window for two weeks to apply, and then the system matches mentors to mentees.. what about surplus mentees? could happen multiple times in a year
user could be both mentor and mentees, depending on mentorship programme constraints&lt;/p&gt;

&lt;p&gt;admin function for bulk CRUD operations&lt;/p&gt;

&lt;p&gt;web app is probably best. app is for internal use only. system picks matches, users do not.&lt;/p&gt;

&lt;p&gt;examples of preferences etc will be emailed over&lt;/p&gt;

&lt;h2 id=&quot;features&quot;&gt;features?&lt;/h2&gt;
&lt;p&gt;must be easy to use, easy to enter matching preferences&lt;/p&gt;

&lt;p&gt;would like to do it on laptop or phone&lt;/p&gt;

&lt;p&gt;notifications would be “brilliant”&lt;/p&gt;

&lt;p&gt;something that could be looked at&lt;/p&gt;

&lt;p&gt;status, record of meetings… nice to have.&lt;/p&gt;

&lt;p&gt;prompts to meet if there hasn’t been activity.&lt;/p&gt;

&lt;p&gt;user profile idea “good”, needs to be fairly simple so that the user doesn’t get invested in working on the profile rather than other things. clearly low priority. focus on the users’ skills.&lt;/p&gt;

&lt;p&gt;internal DB? SAP or there’s a “corporate directory”
could use to populate profile, but best to check as these things tend to be locked down&lt;/p&gt;

&lt;h2 id=&quot;requirements&quot;&gt;Requirements&lt;/h2&gt;

&lt;p&gt;MUST HAVE:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;matching system&lt;/li&gt;
  &lt;li&gt;preferences for matching&lt;/li&gt;
  &lt;li&gt;separate programs with their own requirements&lt;/li&gt;
  &lt;li&gt;status of each persons’ matches
SHOULD HAVE:&lt;/li&gt;
  &lt;li&gt;profile system&lt;/li&gt;
  &lt;li&gt;notifications&lt;/li&gt;
  &lt;li&gt;admin - bulk create/read/update/write (CRUD) operations
COULD HAVE:&lt;/li&gt;
  &lt;li&gt;recording meetings of mentorship&lt;/li&gt;
  &lt;li&gt;prompts to meet
WOULD HAVE&lt;/li&gt;
  &lt;li&gt;corporate directory lookup&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;mentor can’t be line manager -&amp;gt; not the same team is easiest way?&lt;/p&gt;

&lt;h2 id=&quot;next-steps&quot;&gt;Next steps&lt;/h2&gt;
&lt;p&gt;finalise requirements (our side) by 14th October. Jane will then confirm this after weekend.
Create user stories&lt;/p&gt;

&lt;p&gt;Are we using agile…?&lt;/p&gt;</content><summary type="html">different groups with different requirements

3 groups with option to add more - don’t hardcode this

~60 people in talent program, could be higher for others

stable marriage problem

kinda like a dating site problem

same people may/may not be available, max. no of mentees per mentor, status of pairing..?

example: one person has three mentees out their maximum of three. one may be actively meeting, one may not have started meeting, one may have just left scheme

open window for two weeks to apply, and then the system matches mentors to mentees.. what about surplus mentees? could happen multiple times in a year
user could be both mentor and mentees, depending on mentorship programme constraints

admin function for bulk CRUD operations

web app is probably best. app is for internal use only. system picks matches, users do not.

examples of preferences etc will be emailed over

features?
must be easy to use, easy to enter matching preferences

would like to do it on laptop or phone

notifications would be “brilliant”

something that could be looked at

status, record of meetings… nice to have.

prompts to meet if there hasn’t been activity.

user profile idea “good”, needs to be fairly simple so that the user doesn’t get invested in working on the profile rather than other things. clearly low priority. focus on the users’ skills.

internal DB? SAP or there’s a “corporate directory”
could use to populate profile, but best to check as these things tend to be locked down

Requirements

MUST HAVE:

  matching system
  preferences for matching
  separate programs with their own requirements
  status of each persons’ matches
SHOULD HAVE:
  profile system
  notifications
  admin - bulk create/read/update/write (CRUD) operations
COULD HAVE:
  recording meetings of mentorship
  prompts to meet
WOULD HAVE
  corporate directory lookup


mentor can’t be line manager -&amp;gt; not the same team is easiest way?

Next steps
finalise requirements (our side) by 14th October. Jane will then confirm this after weekend.
Create user stories

Are we using agile…?</summary></entry></feed>
